Файлове за пакетна обработка Пакетната   обработка   е   режим   на   работа   на   компютъра,   при   който   командите   се  изпълняват последователно без намесата на потребителя. За целта тези команди предварително  се записват във файл, с разширение *.BAT, като операционната система ги чете и изпълнява една  по  една.   Такъв  файл   се   нарича  пакетен  или   файл   за  пакетна   обработка.  Този  файл  може   да  съдържа   произволна   комбинация   от   вътрешни   и   външни   команди   на   операционната   система,  имена на приложни програми и специални команди за пакетна обработка. По своята структура  пакетните файлове са текстови файлове. Могат да се създават с команда copy con име.bat, със  системния текстов редактор EDIT или с кой да е текстов редактор.  AUTOEXEC.BAT Съкращение   от   AUTOmatically   EXECuted   BATch.   Специален   файл   за   пакетна   обработка,  разположен в главната директория на системния диск, който се изпълнява автоматично при всяко  стартиране или рестартиране на компютъра. Както при всички файлове за пакетна обработка,  съдържащите се в AUTOEXEC.ВАТ команди се изпълняват една по една точно така, както се  въвеждат от системния промпт. Не е задължително да се използва AUTOEXEC.ВАТ файл, но тьй  като   повечето   хора   работят   с  компютрите   си   по   един   и   същ   начин   всеки   път,   обикновено   е  удобно командите да се разположат в този файл, вместо да се налага да се помнят и въвеждат  всеки път. В AUTOEXEC.ВАТ може да се използва всяка една команда, но той се използва най­ често за установяване на системния път чрез командата PATH или системните променливи на  обкръжаващата среда посредством една или повече команди SET.  Команда: REM Предназначение: Поставя коментари във файл за пакетна обработка Синтаксис: REM [коментар] Пример: rem Това е коментар – това което е записано след rem не се интерпретира от командния  интерпретатор. В някои файлове, по­често конфигурационни, отделни възможности за настройка  се   поставят   в   коментар.   Когато   се   извършва   конкретна   настройка   някои   от   коментарите   се  премахват, като по този начин инструкциите вече имат значение. В друг случай коментарите се  използват или от тези, които са разработили файла, или са ориентир за онези потребители, за 

които е предназначен. Команда: PAUSE Предназначение: Спира изпълнението на BAT­файла до натискане на клавиш Синтаксис: PAUSE Пример: pause – резултата от изпълнението на тази команда е спирането на изпълнението на файла  за пакетна обработка и извеждането на съобщението Press any key to continue . . .   Използването   на   командата   е   в   случаите,   когато   има   необходимост   от   потребителска  намеса преди изпълнението на следващите команди или потребителя да разбере какъв е резултата  от изпълнение на предишните команди. Команда: ECHO Предназначение1: Извежда съобщение на екрана  Синтаксис1: ECHO [съобщение] Пример: echo  Hello  world  –   командата   ще   извеждане   текста   след   нея.   Използва   се   главно   в  случаите,   когато   има   необходимост   да   се   изведат   подсещащи   потребителя   указания   за  следващите действия или уточнение на вече получени резултати  echo Hello world > hello.txt – съобщението „Hello world” вместо да се изведе на екрана се  записва във файл „hello.txt”, т.е. файла ще има съдържание този текст echo  Hello  world  >>  hello.txt  – допълва се с един ред файла „hello.txt” с текста „Hello  world” Предназначение2: Показва или скрива командите при тяхното изпълнение във файл  за пакетна обработка Синтаксис2: ECHO [ON | OFF] Пример: echo off – забранява извеждането на командите при изпълнението им в команден файл

echo – извежда текущото състояние  @echo  off  – с помощта на @ не се показва, което е записано след него. По този начин  освен, че ще се спре извеждането на командите, няма да се появи и самият ред, в който това се  оказва. При   използването   на   командите   в   операционната   система   потребителя   въвежда   освен  името на командата и необходимите аргументи към нея. По същият начин при създаването на  команден файл е възможно да се обработят входящи параметри, спрямо които да се изпълни  действието на самия файл. Използването на параметри към файловете за пакетна обработка дава  възможност един и същ файл да бъде приложен към различни файлове, директории и устройства,  в зависимост от предназначението на аргумента. Под параметър се разбира всяка „дума” от командния ред, която е отделена с интервал.  Първият параметър е самото име на BAT­файла. В самия файл могат да се обработват не повече  от 10 параметри (от 0 до 9). В командния ред обаче е възможно да се въведат повече от 10  параметри. Обработването им е възможно след използването на команда SHIFT. Параметрите във  файла се обработват със служебните наименования %0, %1, %2,…, %9.  Пример: от командния ред въвеждаме – abc f1.txt f2.doc f3.txt Във   файла   за   пакетна   обработка   „abc.bat”   навсякъде   където   е   посочено   %1   ще   бъде  заместено с f1.txt, съответно %2 с f2.doc и %3 с f3.txt. В целия файл формално се описват действията със служебните наименования %0...%9, а  при стартиране те се заместват от фактически зададените от командния ред параметри. Команда: IF Предназначение1:  Изпълнява   команда   в   зависимост   от   кода   на   завършване   на  последната команда  Синтаксис1: IF [NOT] ERRORLEVEL номер команда Забележка: Не всички команди връщат код при завършване на тяхното изпълнение Пример: xcopy abc \abc /s/e if errorlevel 0 echo Успешно копиране

Една от командите, които връщат код след приключване е xcopy. В конкретния случай се  проверява дали командата успешно е завършила своето изпълнение. Предназначение2: Сравнява два низа за идентичност  Синтаксис2: IF [NOT] низ1==низ2 команда Пример: if  “%1”==”file.txt” type %1 Проверява дали първият подаден параметър от командния ред е файла „file.txt” и ако е  така се извежда неговото съдържание. Предназначение3: Проверява за съществуването на файл  Синтаксис3: IF [NOT] EXIST име_на_файл команда Пример: if exist c:\file.txt copy file.txt a:\ Ако файла „file.txt” съществува в главната директория на устройство С:, то файла ще се  копира в дискетата. Традиционното   използване   на   командата  IF,   донякъде   затруднява   обработването   на  случаите, когато провереното условие се оцени като лъжа. А именно, изпълнението на командния  файл се прехвърля към следващия ред. Не винаги обаче това е достатъчно за да бъде коректен  във всички случаи файла. Поради тази причина  командата се допълва с клауза ELSE, в която се  посочват действията, които да се изпълнят при положение, че условието е лъжа. Синтаксиса е следния: IF условие ( команда1 команда2 ................ командаN ) ELSE ( команда1 команда2

................ командаN ) Пример: if EXIST AAA ( dir aaa cd aaa ) ELSE ( echo Директорията не съществува ) Примерът   илюстрира,   че   като   цел   за   съществуване   може   да   бъде   определен   не   само  обикновен файл, а и директория. В случай, че търсената директория съществува, то се извежда  на   екран   нейното   съдържание,   а   в   последствие   се   прави   и   текуща.   Ако   директорията   не  съществува се извежда подходящо съобщение.

Команда: FOR Предназначение: Изпълнява една команда върху множество файлове Синтаксис1: FOR %променлива IN (списък) DO команда [параметри] Синтаксис2: FOR %%променлива IN (списък) DO команда [параметри] Забележка: Първият синтаксис е за използване на командата от командния ред, а втория  във файлове за пакетна обработка.  Променлива  е името на променлива, състояща се от един­ единствен знак (без 0..9, >, < и |). Когато се използва командата във команден файл, то символът  в променлива е чувствителен по отношение на малка и главна буква. Списък  е един или няколко  файла, път за достъп, глобални символи (%0..%9, *, ?). Примери: for %%c IN (*.txt) DO echo %%c >> list.txt Обединява всички файлове с разширение „*.txt” в един общ файл „list.txt” for %%f IN (%1 %2 %3) DO dir %%f Извежда последователно съдържанието на три директории въведени като аргументи към  командния файл.

Команда: GOTO Предназначение:  Насочва   изпълнението   на   командния   файл   към   ред,   започващ   с  етикет Синтаксис: GOTO етикет Забележка:  Етикет   е   мястото   във   файла   за   пакетна   обработка,   откъдето   трябва   да  продължи изпълнението, зададено във вида :етикет. Етикетът трябва да стои в началото на ред и  да започва с двоеточие. С използването на команда GOTO е възможно реализирането на цикъл в  командните файлове.  Пример: if not exist %1 goto nothere echo Файла %1 е открит goto end :nothere echo файла %1 не е открит :end

Команда: SHIFT Предназначение: Измества параметрите с един напред  Синтаксис: SHIFT Забележка: Действието на командата е необратимо. Въпреки, че замисъла на командата  е да бъде прилагана ако броя на параметрите към команден файл е повече от 9, то напълно  резонно е да се използва и при по­малко на брой подадени параметри. Примери: Ако в командния ред запишем abc f1.txt f2.txt f3.txt, то асоциацията на трите параметъра  в самия команден файл „abc.bat”, ще бъде съответно за f1.txt ­ %1, f2.txt ­ %2 и f3.txt ­ %3. Ако  се използва веднъж команда  SHIFT, то намаляваме броя на параметрите с един, като по този  начин файла „f1.txt” няма да бъде свързван с %1. Асоциацията на параметрите ще бъде следната:  f2.txt ­ %1, f3.txt ­ %2.

set prom=%1 :One shift if “%1”==”” goto Two copy %1 %prom% goto One :Two set prom= echo Край!

Команда: CALL Предназначение: Стартира указания файл за пакетна обработка  Синтаксис: CALL [устройство:][път]команден_файл [параметри]

