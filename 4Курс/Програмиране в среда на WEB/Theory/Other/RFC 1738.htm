<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0054)http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html -->
<HTML><HEAD><TITLE>RFC 1738</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<META content="MSHTML 6.00.2800.1141" name=GENERATOR></HEAD>
<BODY>
<TABLE width="100%">
  <TBODY>
  <TR>
    <TD vAlign=top align=left>Network Working Group<BR>Request for Comments: 
      1738<BR>Category: Standards Track<BR>
    <TD vAlign=top align=right>T. Berners-Lee<BR>CERN<BR>L. Masinter<BR>Xerox 
      Corporation<BR>M. McCahill<BR>University of 
      Minnesota<BR>Editors<BR>December 1994<BR></TD></TR></TBODY></TABLE><EM><A 
name=page-1>Page 1</A></EM>
<P>
<H3 align=center>Uniform Resource Locators (URL)</H3>
<P>
<DL>
  <DT>Status of this Memo
  <DD>
  <P>This document specifies an Internet standards track protocol for the 
  Internet community, and requests discussion and suggestions for improvements. 
  Please refer to the current edition of the "Internet Official Protocol 
  Standards" (<A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/stdlist.html#s1">STD 1</A>) 
  for the standardization state and status of this protocol. Distribution of 
  this memo is unlimited. 
  <P></P>
  <DT>Abstract
  <DD>
  <P>This document specifies a Uniform Resource Locator (URL), the syntax and 
  semantics of formalized information for location and access of resources via 
  the Internet. 
  <P></P>
  <DT><STRONG><A name=sec-1>1</A> Introduction</STRONG>
  <DD>
  <P>This document describes the syntax and semantics for a compact string 
  representation for a resource available via the Internet. These strings are 
  called "Uniform Resource Locators" (URLs). 
  <P>The specification is derived from concepts introduced by the World- Wide 
  Web global information initiative, whose use of such objects dates from 1990 
  and is described in "Universal Resource Identifiers in WWW", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1630.html">RFC 1630</A>. 
  The specification of URLs is designed to meet the requirements laid out in 
  "Functional Requirements for Internet Resource Locators" [12]. 
  <P>This document was written by the URI working group of the Internet 
  Engineering Task Force. Comments may be addressed to the editors, or to the 
  URI-WG &lt;uri@bunyip.com&gt;. Discussions of the group are archived at 
  &lt;URL:<A 
  href="http://www.acl.lanl.gov/URI/archive/uri-archive.index.html">http://www.acl.lanl.gov/URI/archive/uri-archive.index.html</A>&gt; 

  <P></P>
  <DT>
  <HR>
  <EM><A name=page-2>Page 2</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-2>2</A> General URL Syntax</STRONG>
  <DD>
  <P>Just as there are many different methods of access to resources, there are 
  several schemes for describing the location of such resources. 
  <P>The generic syntax for URLs provides a framework for new schemes to be 
  established using protocols other than those defined in this document. 
  <P>URLs are used to `locate' resources, by providing an abstract 
  identification of the resource location. Having located a resource, a system 
  may perform a variety of operations on the resource, as might be characterized 
  by such words as `access', `update', `replace', `find attributes'. In general, 
  only the `access' method needs to be specified for any URL scheme. 
  <P></P>
  <DT><STRONG><A name=sec-2.1>2.1</A> The main parts of URLs</STRONG>
  <DD>
  <P>A full BNF description of the URL syntax is given in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-5">Section 
  5</A>. 
  <P>In general, URLs are written as follows: 
  <P><PRE>       &lt;scheme&gt;:&lt;scheme-specific-part&gt;
</PRE>
  <P>A URL contains the name of the scheme being used (&lt;scheme&gt;) followed 
  by a colon and then a string (the &lt;scheme-specific-part&gt;) whose 
  interpretation depends on the scheme. 
  <P>Scheme names consist of a sequence of characters. The lower case letters 
  "a"--"z", digits, and the characters plus ("+"), period ("."), and hyphen 
  ("-") are allowed. For resiliency, programs interpreting URLs should treat 
  upper case letters as equivalent to lower case in scheme names (e.g., allow 
  "HTTP" as well as "http"). 
  <P></P>
  <DT><STRONG><A name=sec-2.2>2.2</A> URL Character Encoding Issues</STRONG>
  <DD>
  <P>URLs are sequences of characters, i.e., letters, digits, and special 
  characters. A URLs may be represented in a variety of ways: e.g., ink on 
  paper, or a sequence of octets in a coded character set. The interpretation of 
  a URL depends only on the identity of the characters used. 
  <P>In most URL schemes, the sequences of characters in different parts of a 
  URL are used to represent sequences of octets used in Internet protocols. For 
  example, in the ftp scheme, the host name, directory name and file names are 
  such sequences of octets, represented by parts of the URL. Within those parts, 
  an octet may be represented by 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-3>Page 3</A></EM>
  <DD>
  <P>the chararacter which has that octet as its code within the US-ASCII [20] 
  coded character set. 
  <P>In addition, octets may be encoded by a character triplet consisting of the 
  character "%" followed by the two hexadecimal digits (from "0123456789ABCDEF") 
  which forming the hexadecimal value of the octet. (The characters "abcdef" may 
  also be used in hexadecimal encodings.) 
  <P>Octets must be encoded if they have no corresponding graphic character 
  within the US-ASCII coded character set, if the use of the corresponding 
  character is unsafe, or if the corresponding character is reserved for some 
  other interpretation within the particular URL scheme. 
  <P>No corresponding graphic US-ASCII: 
  <P>URLs are written only with the graphic printable characters of the US-ASCII 
  coded character set. The octets 80-FF hexadecimal are not used in US-ASCII, 
  and the octets 00-1F and 7F hexadecimal represent control characters; these 
  must be encoded. 
  <P>Unsafe: 
  <P>Characters can be unsafe for a number of reasons. The space character is 
  unsafe because significant spaces may disappear and insignificant spaces may 
  be introduced when URLs are transcribed or typeset or subjected to the 
  treatment of word-processing programs. The characters "&lt;" and "&gt;" are 
  unsafe because they are used as the delimiters around URLs in free text; the 
  quote mark (""") is used to delimit URLs in some systems. The character "#" is 
  unsafe and should always be encoded because it is used in World Wide Web and 
  in other systems to delimit a URL from a fragment/anchor identifier that might 
  follow it. The character "%" is unsafe because it is used for encodings of 
  other characters. Other characters are unsafe because gateways and other 
  transport agents are known to sometimes modify such characters. These 
  characters are "{", "}", "|", "\", "^", "~", "[", "]", and "`". 
  <P>All unsafe characters must always be encoded within a URL. For example, the 
  character "#" must be encoded within URLs even in systems that do not normally 
  deal with fragment or anchor identifiers, so that if the URL is copied into 
  another system that does use them, it will not be necessary to change the URL 
  encoding. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-4>Page 4</A></EM>
  <DD>
  <P>Reserved: 
  <P>Many URL schemes reserve certain characters for a special meaning: their 
  appearance in the scheme-specific part of the URL has a designated semantics. 
  If the character corresponding to an octet is reserved in a scheme, the octet 
  must be encoded. The characters ";", "/", "?", ":", "@", "=" and "&amp;" are 
  the characters which may be reserved for special meaning within a scheme. No 
  other characters may be reserved within a scheme. 
  <P>Usually a URL has the same interpretation when an octet is represented by a 
  character and when it encoded. However, this is not true for reserved 
  characters: encoding a character reserved for a particular scheme may change 
  the semantics of a URL. 
  <P>Thus, only alphanumerics, the special characters "$-_.+!*'(),", and 
  reserved characters used for their reserved purposes may be used unencoded 
  within a URL. 
  <P>On the other hand, characters that are not required to be encoded 
  (including alphanumerics) may be encoded within the scheme-specific part of a 
  URL, as long as they are not being used for a reserved purpose. 
  <P></P>
  <DT><STRONG><A name=sec-2.3>2.3</A> Hierarchical schemes and relative 
  links</STRONG>
  <DD>
  <P>In some cases, URLs are used to locate resources that contain pointers to 
  other resources. In some cases, those pointers are represented as relative 
  links where the expression of the location of the second resource is in terms 
  of "in the same place as this one except with the following relative path". 
  Relative links are not described in this document. However, the use of 
  relative links depends on the original URL containing a hierarchical structure 
  against which the relative link is based. 
  <P>Some URL schemes (such as the ftp, http, and file schemes) contain names 
  that can be considered hierarchical; the components of the hierarchy are 
  separated by "/". 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-5>Page 5</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3>3</A> Specific Schemes</STRONG>
  <DD>
  <P>The mapping for some existing standard and experimental protocols is 
  outlined in the BNF syntax definition. Notes on particular protocols follow. 
  The schemes covered are: 
  <P><PRE>   ftp                     File Transfer protocol
   http                    Hypertext Transfer Protocol
   gopher                  The Gopher protocol
   mailto                  Electronic mail address
   news                    USENET news
   nntp                    USENET news using NNTP access
   telnet                  Reference to interactive sessions
   wais                    Wide Area Information Servers
   file                    Host-specific file names
   prospero                Prospero Directory Service
</PRE>
  <P>Other schemes may be specified by future specifications. <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-4">Section 
  4</A> of this document describes how new schemes may be registered, and lists 
  some scheme names that are under development. 
  <P></P>
  <DT><STRONG><A name=sec-3.1>3.1</A> Common Internet Scheme Syntax</STRONG>
  <DD>
  <P>While the syntax for the rest of the URL may vary depending on the 
  particular scheme selected, URL schemes that involve the direct use of an 
  IP-based protocol to a specified host on the Internet use a common syntax for 
  the scheme-specific data: 
  <P><PRE>        //&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;url-path&gt;
</PRE>
  <P>Some or all of the parts "&lt;user&gt;:&lt;password&gt;@", 
  ":&lt;password&gt;", ":&lt;port&gt;", and "/&lt;url-path&gt;" may be excluded. 
  The scheme specific data start with a double slash "//" to indicate that it 
  complies with the common Internet scheme syntax. The different components obey 
  the following rules: 
  <P>user <BR>An optional user name. Some schemes (e.g., ftp) allow the 
  specification of a user name. 
  <P>password <BR>An optional password. If present, it follows the user name 
  separated from it by a colon. 
  <P>The user name (and password), if present, are followed by a commercial 
  at-sign "@". Within the user and password field, any ":", "@", or "/" must be 
  encoded. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-6>Page 6</A></EM>
  <DD>
  <P>Note that an empty user name or password is different than no user name or 
  password; there is no way to specify a password without specifying a user 
  name. E.g., &lt;URL:<A href="ftp://@host.com/">ftp://@host.com/</A>&gt; has an 
  empty user name and no password, &lt;URL:<A 
  href="ftp://host.com/">ftp://host.com/</A>&gt; has no user name, while 
  &lt;URL:<A href="ftp://foo:@host.com/">ftp://foo:@host.com/</A>&gt; has a user 
  name of "foo" and an empty password. 
  <P>host <BR>The fully qualified domain name of a network host, or its IP 
  address as a set of four decimal digit groups separated by ".". Fully 
  qualified domain names take the form as described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.5">Section 
  3.5</A> of <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1034.html">RFC 1034</A> 
  [13] and <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-2.1">Section 
  2.1</A> of <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1123.html">RFC 1123</A> 
  [5]: a sequence of domain labels separated by ".", each domain label starting 
  and ending with an alphanumerical character and possibly also containing "-" 
  characters. The rightmost domain label will never start with a digit, though, 
  which <BR>syntactically distinguishes all domain names from the IP addresses. 
  <P>port <BR>The port number to connect to. Most schemes designate protocols 
  that have a default port number. Another port number may optionally be 
  supplied, in decimal, separated from the host by a colon. If the port is 
  omitted, the colon is as well. 
  <P>url-path <BR>The rest of the locator consists of data specific to the 
  scheme, and is known as the "url-path". It supplies the details of how the 
  specified resource can be accessed. Note that the "/" between the host (or 
  port) and the url-path is NOT part of the url-path. 
  <P>The url-path syntax depends on the scheme being used, as does the manner in 
  which it is interpreted. 
  <P></P>
  <DT><STRONG><A name=sec-3.2>3.2</A> FTP</STRONG>
  <DD>
  <P>The FTP URL scheme is used to designate files and directories on Internet 
  hosts accessible using the FTP protocol (<A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0959.html">RFC959</A>). 
  <P>A FTP URL follow the syntax described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. If :&lt;port&gt; is omitted, the port defaults to 21. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-7>Page 7</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3.2.1>3.2.1</A> FTP Name and Password</STRONG>
  <DD>
  <P>A user name and password may be supplied; they are used in the ftp "USER" 
  and "PASS" commands after first making the connection to the FTP server. If no 
  user name or password is supplied and one is requested by the FTP server, the 
  conventions for "anonymous" FTP are to be used, as follows: 
  <P>The user name "anonymous" is supplied. 
  <P>The password is supplied as the Internet e-mail address of the end user 
  accessing the resource. 
  <P>If the URL supplies a user name but no password, and the remote server 
  requests a password, the program interpreting the FTP URL should request one 
  from the user. 
  <P></P>
  <DT><STRONG><A name=sec-3.2.2>3.2.2</A> FTP url-path</STRONG>
  <DD>
  <P>The url-path of a FTP URL has the following syntax: 
  <P><PRE>        &lt;cwd1&gt;/&lt;cwd2&gt;/.../&lt;cwdN&gt;/&lt;name&gt;;type=&lt;typecode&gt;
</PRE>
  <P>Where &lt;cwd1&gt; through &lt;cwdN&gt; and &lt;name&gt; are (possibly 
  encoded) strings and &lt;typecode&gt; is one of the characters "a", "i", or 
  "d". The part ";type=&lt;typecode&gt;" may be omitted. The &lt;cwdx&gt; and 
  &lt;name&gt; parts may be empty. The whole url-path may be omitted, including 
  the "/" delimiting it from the prefix containing user, password, host, and 
  port. 
  <P>The url-path is interpreted as a series of FTP commands as follows: 
  <P>Each of the &lt;cwd&gt; elements is to be supplied, sequentially, as the 
  argument to a CWD (change working directory) command. 
  <P>If the typecode is "d", perform a NLST (name list) command with <PRE>      &lt;name&gt; as the argument, and interpret the results as a file
      directory listing.
</PRE>
  <P>Otherwise, perform a TYPE command with &lt;typecode&gt; as the argument, 
  and then access the file whose name is &lt;name&gt; (for example, using the 
  RETR command.) 
  <P>Within a name or CWD component, the characters "/" and ";" are reserved and 
  must be encoded. The components are decoded prior to their use in the FTP 
  protocol. In particular, if the appropriate FTP sequence to access a 
  particular file requires supplying a string containing a "/" as an argument to 
  a CWD or RETR command, it is 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-8>Page 8</A></EM>
  <DD>
  <P>necessary to encode each "/". 
  <P>For example, the URL &lt;URL:<A 
  href="ftp://myname@host.dom//etc/motd">ftp://myname@host.dom//etc/motd</A>&gt; 
  is interpreted by FTP-ing to "host.dom", logging in as "myname" (prompting for 
  a password if it is asked for), and then executing "CWD /etc" and then "RETR 
  motd". This has a different meaning from <PRE>   &lt;URL:<A href="ftp://myname@host.dom/etc/motd">ftp://myname@host.dom/etc/motd</A>&gt; which would "CWD etc" and then
   "RETR motd"; the initial "CWD" might be executed relative to the
   default directory for "myname". On the other hand,
   &lt;URL:<A href="ftp://myname@host.dom//etc/motd">ftp://myname@host.dom//etc/motd</A>&gt;, would "CWD " with a null
   argument, then "CWD etc", and then "RETR motd".
</PRE>
  <P>FTP URLs may also be used for other operations; for example, it is possible 
  to update a file on a remote file server, or infer information about it from 
  the directory listings. The mechanism for doing so is not spelled out here. 
  <P></P>
  <DT><STRONG><A name=sec-3.2.3>3.2.3</A> FTP Typecode is Optional</STRONG>
  <DD>
  <P>The entire ;type=&lt;typecode&gt; part of a FTP URL is optional. If it is 
  omitted, the client program interpreting the URL must guess the appropriate 
  mode to use. In general, the data content type of a file can only be guessed 
  from the name, e.g., from the suffix of the name; the appropriate type code to 
  be used for transfer of the file can then be deduced from the data content of 
  the file. 
  <P></P>
  <DT><STRONG><A name=sec-3.2.4>3.2.4</A> Hierarchy</STRONG>
  <DD>
  <P>For some file systems, the "/" used to denote the hierarchical structure of 
  the URL corresponds to the delimiter used to construct a file name hierarchy, 
  and thus, the filename will look similar to the URL path. This does NOT mean 
  that the URL is a Unix filename. 
  <P></P>
  <DT><STRONG><A name=sec-3.2.5>3.2.5</A> Optimization</STRONG>
  <DD>
  <P>Clients accessing resources via FTP may employ additional heuristics to 
  optimize the interaction. For some FTP servers, for example, it may be 
  reasonable to keep the control connection open while accessing multiple URLs 
  from the same server. However, there is no common hierarchical model to the 
  FTP protocol, so if a directory change command has been given, it is 
  impossible in general to deduce what sequence should be given to navigate to 
  another directory for a second retrieval, if the paths are different. The only 
  reliable algorithm is to disconnect and reestablish the control connection. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-9>Page 9</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3.3>3.3</A> HTTP</STRONG>
  <DD>
  <P>The HTTP URL scheme is used to designate Internet resources accessible 
  using HTTP (HyperText Transfer Protocol). 
  <P>The HTTP protocol is specified elsewhere. This specification only describes 
  the syntax of HTTP URLs. 
  <P>An HTTP URL takes the form: 
  <P><A href="http://<host/">http://<HOST< 
  a>&gt;:&lt;port&gt;/&lt;path&gt;?&lt;searchpart&gt; 
  <P>where &lt;host&gt; and &lt;port&gt; are as described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. If :&lt;port&gt; is omitted, the port defaults to 80. No user name or 
  password is allowed. &lt;path&gt; is an HTTP selector, and &lt;searchpart&gt; 
  is a query string. The &lt;path&gt; is optional, as is the &lt;searchpart&gt; 
  and its preceding "?". If neither &lt;path&gt; nor &lt;searchpart&gt; is 
  present, the "/" may also be omitted. 
  <P>Within the &lt;path&gt; and &lt;searchpart&gt; components, "/", ";", "?" 
  are reserved. The "/" character may be used within HTTP to designate a 
  hierarchical structure. 
  <P></P>
  <DT><STRONG><A name=sec-3.4>3.4</A> GOPHER</STRONG>
  <DD>
  <P>The Gopher URL scheme is used to designate Internet resources accessible 
  using the Gopher protocol. 
  <P>The base Gopher protocol is described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1436.html">RFC 1436</A> and 
  supports items and collections of items (directories). The Gopher+ protocol is 
  a set of upward compatible extensions to the base Gopher protocol and is 
  described in [2]. Gopher+ supports associating arbitrary sets of attributes 
  and alternate data representations with Gopher items. Gopher URLs accommodate 
  both Gopher and Gopher+ items and item attributes. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.1>3.4.1</A> Gopher URL syntax</STRONG>
  <DD>
  <P>A Gopher URL takes the form: 
  <P>gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt; 
  <P>where &lt;gopher-path&gt; is one of 
  <P><PRE>       &lt;gophertype&gt;&lt;selector&gt;
       &lt;gophertype&gt;&lt;selector&gt;%09&lt;search&gt;
       &lt;gophertype&gt;&lt;selector&gt;%09&lt;search&gt;%09&lt;gopher+_string&gt;
</PRE>
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-10>Page 10</A></EM>
  <DD>
  <P>If :&lt;port&gt; is omitted, the port defaults to 70. &lt;gophertype&gt; is 
  a single-character field to denote the Gopher type of the resource to which 
  the URL refers. The entire &lt;gopher-path&gt; may also be empty, in which 
  case the delimiting "/" is also optional and the &lt;gophertype&gt; defaults 
  to "1". 
  <P><PRE>   &lt;selector&gt; is the Gopher selector string.  In the Gopher protocol,
   Gopher selector strings are a sequence of octets which may contain
   any octets except 09 hexadecimal (US-ASCII HT or tab) 0A hexadecimal
   (US-ASCII character LF), and 0D (US-ASCII character CR).
</PRE>
  <P>Gopher clients specify which item to retrieve by sending the Gopher 
  selector string to a Gopher server. 
  <P>Within the &lt;gopher-path&gt;, no characters are reserved. 
  <P>Note that some Gopher &lt;selector&gt; strings begin with a copy of the <PRE>   &lt;gophertype&gt; character, in which case that character will occur twice
   consecutively. The Gopher selector string may be an empty string;
   this is how Gopher clients refer to the top-level directory on a
   Gopher server.
</PRE>
  <P></P>
  <DT><STRONG><A name=sec-3.4.2>3.4.2</A> Specifying URLs for Gopher Search 
  Engines</STRONG>
  <DD>
  <P>If the URL refers to a search to be submitted to a Gopher search engine, 
  the selector is followed by an encoded tab (%09) and the search string. To 
  submit a search to a Gopher search engine, the Gopher client sends the 
  &lt;selector&gt; string (after decoding), a tab, and the search string to the 
  Gopher server. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.3>3.4.3</A> URL syntax for Gopher+ items</STRONG>
  <DD>
  <P>URLs for Gopher+ items have a second encoded tab (%09) and a Gopher+ 
  string. Note that in this case, the %09&lt;search&gt; string must be supplied, 
  although the &lt;search&gt; element may be the empty string. 
  <P>The &lt;gopher+_string&gt; is used to represent information required for 
  retrieval of the Gopher+ item. Gopher+ items may have alternate views, 
  arbitrary sets of attributes, and may have electronic forms associated with 
  them. 
  <P>To retrieve the data associated with a Gopher+ URL, a client will connect 
  to the server and send the Gopher selector, followed by a tab and the search 
  string (which may be empty), followed by a tab and the Gopher+ commands. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-11>Page 11</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3.4.4>3.4.4</A> Default Gopher+ data 
  representation</STRONG>
  <DD>
  <P>When a Gopher server returns a directory listing to a client, the Gopher+ 
  items are tagged with either a "+" (denoting Gopher+ items) or a "?" (denoting 
  Gopher+ items which have a +ASK form associated with them). A Gopher URL with 
  a Gopher+ string consisting of only a "+" refers to the default view (data 
  representation) of the item while a Gopher+ string containing only a "?" refer 
  to an item with a Gopher electronic form associated with it. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.5>3.4.5</A> Gopher+ items with electronic 
  forms</STRONG>
  <DD>
  <P>Gopher+ items which have a +ASK associated with them (i.e. Gopher+ items 
  tagged with a "?") require the client to fetch the item's +ASK attribute to 
  get the form definition, and then ask the user to fill out the form and return 
  the user's responses along with the selector string to retrieve the item. 
  Gopher+ clients know how to do this but depend on the "?" tag in the Gopher+ 
  item description to know when to handle this case. The "?" is used in the 
  Gopher+ string to be consistent with Gopher+ protocol's use of this symbol. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.6>3.4.6</A> Gopher+ item attribute 
  collections</STRONG>
  <DD>
  <P>To refer to the Gopher+ attributes of an item, the Gopher URL's Gopher+ 
  string consists of "!" or "$". "!" refers to the all of a Gopher+ item's 
  attributes. "$" refers to all the item attributes for all items in a Gopher 
  directory. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.7>3.4.7</A> Referring to specific Gopher+ 
  attributes</STRONG>
  <DD>
  <P>To refer to specific attributes, the URL's gopher+_string is 
  "!&lt;attribute_name&gt;" or "$&lt;attribute_name&gt;". For example, to refer 
  to the attribute containing the abstract of an item, the gopher+_string would 
  be "!+ABSTRACT". 
  <P>To refer to several attributes, the gopher+_string consists of the 
  attribute names separated by coded spaces. For example, 
  <BR>"!+ABSTRACT%20+SMELL" refers to the +ABSTRACT and +SMELL attributes of an 
  item. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.8>3.4.8</A> URL syntax for Gopher+ alternate 
  views</STRONG>
  <DD>
  <P>Gopher+ allows for optional alternate data representations (alternate 
  views) of items. To retrieve a Gopher+ alternate view, a Gopher+ client sends 
  the appropriate view and language identifier (found in the item's +VIEW 
  attribute). To refer to a specific Gopher+ alternate view, the URL's Gopher+ 
  string would be in the form: 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-12>Page 12</A></EM>
  <DD>
  <P><PRE>        +&lt;view_name&gt;%20&lt;language_name&gt;
</PRE>
  <P>For example, a Gopher+ string of "+application/postscript%20Es_ES" refers 
  to the Spanish language postscript alternate view of a Gopher+ item. 
  <P></P>
  <DT><STRONG><A name=sec-3.4.9>3.4.9</A> URL syntax for Gopher+ electronic 
  forms</STRONG>
  <DD>
  <P>The gopher+_string for a URL that refers to an item referenced by a Gopher+ 
  electronic form (an ASK block) filled out with specific values is a coded 
  version of what the client sends to the server. The gopher+_string is of the 
  form: 
  <P><PRE>+%091%0D%0A+-1%0D%0A&lt;ask_item1_value&gt;%0D%0A&lt;ask_item2_value&gt;%0D%0A.%0D%0A
</PRE>
  <P>To retrieve this item, the Gopher client sends: 
  <P><PRE>       &lt;a_gopher_selector&gt;&lt;tab&gt;+&lt;tab&gt;1&lt;cr&gt;&lt;lf&gt;
       +-1&lt;cr&gt;&lt;lf&gt;
       &lt;ask_item1_value&gt;&lt;cr&gt;&lt;lf&gt;
       &lt;ask_item2_value&gt;&lt;cr&gt;&lt;lf&gt;
       .&lt;cr&gt;&lt;lf&gt;
</PRE>
  <P>to the Gopher server. 
  <P></P>
  <DT><STRONG><A name=sec-3.5>3.5</A> MAILTO</STRONG>
  <DD>
  <P>The mailto URL scheme is used to designate the Internet mailing address of 
  an individual or service. No additional information other than an Internet 
  mailing address is present or implied. 
  <P>A mailto URL takes the form: 
  <P>mailto:&lt;rfc822-addr-spec&gt; 
  <P>where &lt;rfc822-addr-spec&gt; is (the encoding of an) addr-spec, as 
  specified in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0822.html">RFC 822</A> [6]. 
  Within mailto URLs, there are no reserved characters. 
  <P>Note that the percent sign ("%") is commonly used within <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0822.html">RFC 822</A> 
  addresses and must be encoded. 
  <P>Unlike many URLs, the mailto scheme does not represent a data object to be 
  accessed directly; there is no sense in which it designates an object. It has 
  a different use than the message/external-body type in MIME. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-13>Page 13</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3.6>3.6</A> NEWS</STRONG>
  <DD>
  <P>The news URL scheme is used to refer to either news groups or individual 
  articles of USENET news, as specified in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.html">RFC 1036</A>. 
  <P>A news URL takes one of two forms: 
  <P>news:&lt;newsgroup-name&gt; <BR>news:&lt;message-id&gt; 
  <P>A &lt;newsgroup-name&gt; is a period-delimited hierarchical name, such as 
  "comp.infosystems.www.misc". A &lt;message-id&gt; corresponds to the 
  Message-ID of <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-2.1.5">section 
  2.1.5</A> of <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.html">RFC 1036</A>, 
  without the enclosing "&lt;" and "&gt;"; it takes the form 
  &lt;unique&gt;@&lt;full_domain_name&gt;. A message identifier may be 
  distinguished from a news group name by the presence of the commercial at "@" 
  character. No additional characters are reserved within the components of a 
  news URL. 
  <P>If &lt;newsgroup-name&gt; is "*" (as in &lt;URL:news:*&gt;), it is used to 
  refer to "all available news groups". 
  <P>The news URLs are unusual in that by themselves, they do not contain 
  sufficient information to locate a single resource, but, rather, are 
  location-independent. 
  <P></P>
  <DT><STRONG><A name=sec-3.7>3.7</A> NNTP</STRONG>
  <DD>
  <P>The nntp URL scheme is an alternative method of referencing news articles, 
  useful for specifying news articles from NNTP servers (RFC 977). 
  <P>A nntp URL take the form: 
  <P>nntp://&lt;host&gt;:&lt;port&gt;/&lt;newsgroup-name&gt;/&lt;article-number&gt; 

  <P>where &lt;host&gt; and &lt;port&gt; are as described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. If :&lt;port&gt; is omitted, the port defaults to 119. 
  <P>The &lt;newsgroup-name&gt; is the name of the group, while the &lt;article- 
  number&gt; is the numeric id of the article within that newsgroup. 
  <P>Note that while nntp: URLs specify a unique location for the article 
  resource, most NNTP servers currently on the Internet today are configured 
  only to allow access from local clients, and thus nntp URLs do not designate 
  globally accessible resources. Thus, the news: form of URL is preferred as a 
  way of identifying news articles. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-14>Page 14</A></EM>
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-3.8>3.8</A> TELNET</STRONG>
  <DD>
  <P>The Telnet URL scheme is used to designate interactive services that may be 
  accessed by the Telnet protocol. 
  <P>A telnet URL takes the form: 
  <P>telnet://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/ 
  <P>as specified in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. The final "/" character may be omitted. If :&lt;port&gt; is omitted, 
  the port defaults to 23. The :&lt;password&gt; can be omitted, as well as the 
  whole &lt;user&gt;:&lt;password&gt; part. 
  <P>This URL does not designate a data object, but rather an interactive 
  service. Remote interactive services vary widely in the means by which they 
  allow remote logins; in practice, the &lt;user&gt; and <PRE>   &lt;password&gt; supplied are advisory only: clients accessing a telnet URL
   merely advise the user of the suggested username and password.
</PRE>
  <P></P>
  <DT><STRONG><A name=sec-3.9>3.9</A> WAIS</STRONG>
  <DD>
  <P>The WAIS URL scheme is used to designate WAIS databases, searches, or 
  individual documents available from a WAIS database. WAIS is described in [7]. 
  The WAIS protocol is described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1625.html">RFC 1625</A> 
  [17]; Although the WAIS protocol is based on Z39.50-1988, the WAIS URL scheme 
  is not intended for use with arbitrary Z39.50 services. 
  <P>A WAIS URL takes one of the following forms: 
  <P>wais://&lt;host&gt;:&lt;port&gt;/&lt;database&gt; 
  <BR>wais://&lt;host&gt;:&lt;port&gt;/&lt;database&gt;?&lt;search&gt; 
  <BR>wais://&lt;host&gt;:&lt;port&gt;/&lt;database&gt;/&lt;wtype&gt;/&lt;wpath&gt; 

  <P>where &lt;host&gt; and &lt;port&gt; are as described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. If :&lt;port&gt; is omitted, the port defaults to 210. The first form 
  designates a WAIS database that is available for searching. The second form 
  designates a particular search. &lt;database&gt; is the name of the WAIS 
  database being queried. 
  <P>The third form designates a particular document within a WAIS database to 
  be retrieved. In this form &lt;wtype&gt; is the WAIS designation of the type 
  of the object. Many WAIS implementations require that a client know the "type" 
  of an object prior to retrieval, the type being returned along with the 
  internal object identifier in the search response. The &lt;wtype&gt; is 
  included in the URL in order to allow the client interpreting the URL adequate 
  information to actually retrieve the document. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-15>Page 15</A></EM>
  <DD>
  <P>The &lt;wpath&gt; of a WAIS URL consists of the WAIS document-id, encoded 
  as necessary using the method described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-2.2">Section 
  2.2</A>. The WAIS document-id should be treated opaquely; it may only be 
  decomposed by the server that issued it. 
  <P></P>
  <DT><STRONG><A name=sec-3.10>3.10</A> FILES</STRONG>
  <DD>
  <P>The file URL scheme is used to designate files accessible on a particular 
  host computer. This scheme, unlike most other URL schemes, does not designate 
  a resource that is universally accessible over the Internet. 
  <P>A file URL takes the form: 
  <P>file://&lt;host&gt;/&lt;path&gt; 
  <P>where &lt;host&gt; is the fully qualified domain name of the system on 
  which the &lt;path&gt; is accessible, and &lt;path&gt; is a hierarchical 
  directory path of the form 
  &lt;directory&gt;/&lt;directory&gt;/.../&lt;name&gt;. 
  <P>For example, a VMS file 
  <P>DISK$USER:[MY.NOTES]NOTE123456.TXT 
  <P>might become 
  <P><PRE>     &lt;URL:file://vms.host.edu/disk$user/my/notes/note12345.txt&gt;
</PRE>
  <P>As a special case, &lt;host&gt; can be the string "localhost" or the empty 
  string; this is interpreted as `the machine from which the URL is being 
  interpreted'. 
  <P>The file URL scheme is unusual in that it does not specify an Internet 
  protocol or access method for such files; as such, its utility in network 
  protocols between hosts is limited. 
  <P></P>
  <DT><STRONG><A name=sec-3.11>3.11</A> PROSPERO</STRONG>
  <DD>
  <P>The Prospero URL scheme is used to designate resources that are accessed 
  via the Prospero Directory Service. The Prospero protocol is described 
  elsewhere [14]. 
  <P>A prospero URLs takes the form: 
  <P>prospero://&lt;host&gt;:&lt;port&gt;/&lt;hsoname&gt;;&lt;field&gt;=&lt;value&gt; 

  <P>where &lt;host&gt; and &lt;port&gt; are as described in <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1738.html#sec-3.1">Section 
  3.1</A>. If :&lt;port&gt; is omitted, the port defaults to 1525. No username 
  or password is 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-16>Page 16</A></EM>
  <DD>
  <P>allowed. 
  <P>The &lt;hsoname&gt; is the host-specific object name in the Prospero 
  protocol, suitably encoded. This name is opaque and interpreted by the 
  Prospero server. The semicolon ";" is reserved and may not appear without 
  quoting in the &lt;hsoname&gt;. 
  <P>Prospero URLs are interpreted by contacting a Prospero directory server on 
  the specified host and port to determine appropriate access methods for a 
  resource, which might themselves be represented as different URLs. External 
  Prospero links are represented as URLs of the underlying access method and are 
  not represented as Prospero URLs. 
  <P>Note that a slash "/" may appear in the &lt;hsoname&gt; without quoting and 
  no significance may be assumed by the application. Though slashes may indicate 
  hierarchical structure on the server, such structure is not guaranteed. Note 
  that many &lt;hsoname&gt;s begin with a slash, in which case the host or port 
  will be followed by a double slash: the slash from the URL syntax, followed by 
  the initial slash from the <PRE>   &lt;hsoname&gt;. (E.g., &lt;URL:prospero://host.dom//pros/name&gt; designates a
   &lt;hsoname&gt; of "/pros/name".)
</PRE>
  <P>In addition, after the &lt;hsoname&gt;, optional fields and values 
  associated with a Prospero link may be specified as part of the URL. When 
  present, each field/value pair is separated from each other and from the rest 
  of the URL by a ";" (semicolon). The name of the field and its value are 
  separated by a "=" (equal sign). If present, these fields serve to identify 
  the target of the URL. For example, the OBJECT-VERSION field can be specified 
  to identify a specific version of an object. 
  <P></P>
  <DT><STRONG><A name=sec-4>4</A> REGISTRATION OF NEW SCHEMES</STRONG>
  <DD>
  <P>A new scheme may be introduced by defining a mapping onto a conforming URL 
  syntax, using a new prefix. URLs for experimental schemes may be used by 
  mutual agreement between parties. Scheme names starting with the characters 
  "x-" are reserved for experimental purposes. 
  <P>The Internet Assigned Numbers Authority (IANA) will maintain a registry of 
  URL schemes. Any submission of a new URL scheme must include a definition of 
  an algorithm for accessing of resources within that scheme and the syntax for 
  representing such a scheme. 
  <P>URL schemes must have demonstrable utility and operability. One way to 
  provide such a demonstration is via a gateway which provides objects in the 
  new scheme for clients using an existing protocol. If 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-17>Page 17</A></EM>
  <DD>
  <P>the new scheme does not locate resources that are data objects, the 
  properties of names in the new space must be clearly defined. 
  <P>New schemes should try to follow the same syntactic conventions of existing 
  schemes, where appropriate. It is likewise recommended that, where a protocol 
  allows for retrieval by URL, that the client software have provision for being 
  configured to use specific gateway locators for indirect access through new 
  naming schemes. 
  <P>The following scheme have been proposed at various times, but this document 
  does not define their syntax or use at this time. It is suggested that IANA 
  reserve their scheme names for future definition: 
  <P><PRE>   afs              Andrew File System global file names.
   mid              Message identifiers for electronic mail.
   cid              Content identifiers for MIME body parts.
   nfs              Network File System (NFS) file names.
   tn3270           Interactive 3270 emulation sessions.
   mailserver       Access to data available from mail servers.
   z39.50           Access to ANSI Z39.50 services.
</PRE>
  <P></P>
  <DT><STRONG><A name=sec-5>5</A> BNF for specific URL schemes</STRONG>
  <DD>
  <P>This is a BNF-like description of the Uniform Resource Locator syntax, 
  using the conventions of <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0822.html">RFC822</A>, 
  except that "|" is used to designate alternatives, and brackets [] are used 
  around optional or repeated elements. Briefly, literals are quoted with "", 
  optional elements are enclosed in [brackets], and elements may be preceded 
  with &lt;n&gt;* to designate n or more repetitions of the following element; n 
  defaults to 0. 
  <P><PRE>; The generic form of a URL is:
</PRE>
  <P></P>
  <DT>genericurl = scheme ":" schemepart
  <DD>
  <P><PRE>; Specific predefined schemes are defined here; new schemes
</PRE><PRE>; may be registered with IANA
</PRE>
  <P></P>
  <DT>url = httpurl | ftpurl | newsurl |
  <DD>nntpurl | telneturl | gopherurl | <BR>waisurl | mailtourl | fileurl | 
  <BR>prosperourl | otherurl 
  <P><PRE>; new schemes follow the general syntax
otherurl       = genericurl

; the scheme is in lower case; interpreters should use case-ignore
scheme         = 1*[ lowalpha | digit | "+" | "-" | "." ]
</PRE>
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-18>Page 18</A></EM>
  <DD>
  <P></P>
  <DT>schemepart = *xchar | ip-schemepart
  <DD>
  <P><PRE>; URL schemeparts for ip based protocols:
</PRE>
  <P></P>
  <DT>ip-schemepart = "//" login [ "/" urlpath ]
  <DD>
  <P></P>
  <DT>login = [ user [ ":" password ] "@" ] hostport
  <DD>
  <DT>hostport = host [ ":" port ]
  <DD>
  <DT>host = hostname | hostnumber
  <DD>
  <DT>hostname = *[ domainlabel "." ] toplabel
  <DD>
  <DT>domainlabel = alphadigit | alphadigit *[ alphadigit | "-" ] alphadigit
  <DD>
  <DT>toplabel = alpha | alpha *[ alphadigit | "-" ] alphadigit
  <DD>
  <DT>alphadigit = alpha | digit
  <DD>
  <DT>hostnumber = digits "." digits "." digits "." digits
  <DD>
  <DT>port = digits
  <DD>
  <DT>user = *[ uchar | ";" | "?" | "&amp;" | "=" ]
  <DD>
  <DT>password = *[ uchar | ";" | "?" | "&amp;" | "=" ]
  <DD>
  <DT>urlpath = *xchar ; depends on protocol see section 3.1
  <DD>
  <P><PRE>; The predefined schemes:

; FTP (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0959.html">RFC959</A>)
</PRE>
  <P></P>
  <DT>ftpurl = "ftp://" login [ "/" fpath [ ";type=" ftptype ]]
  <DD>
  <DT>fpath = fsegment *[ "/" fsegment ]
  <DD>
  <DT>fsegment = *[ uchar | "?" | ":" | "@" | "&amp;" | "=" ]
  <DD>
  <DT>ftptype = "A" | "I" | "D" | "a" | "i" | "d"
  <DD>
  <P><PRE>; FILE
</PRE>
  <P></P>
  <DT>fileurl = "file://" [ host | "localhost" ] "/" fpath
  <DD>
  <P><PRE>; HTTP
</PRE>
  <P></P>
  <DT>httpurl = "http://" hostport [ "/" hpath [ "?" search ]]
  <DD>
  <DT>hpath = hsegment *[ "/" hsegment ]
  <DD>
  <DT>hsegment = *[ uchar | ";" | ":" | "@" | "&amp;" | "=" ]
  <DD>
  <DT>search = *[ uchar | ";" | ":" | "@" | "&amp;" | "=" ]
  <DD>
  <P><PRE>; GOPHER (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1436.html">RFC1436</A>)
</PRE>
  <P></P>
  <DT>gopherurl = "gopher://" hostport [ / [ gtype [ selector
  <DD>[ "%09" search [ "%09" gopher+_string ] ] ] ] ] 
  <DT>gtype = xchar
  <DD>
  <DT>selector = *xchar
  <DD>
  <DT>gopher+_string = *xchar
  <DD>
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-19>Page 19</A></EM>
  <DD>
  <P><PRE>; MAILTO (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0822.html">RFC822</A>)
</PRE>
  <P></P>
  <DT>mailtourl = "mailto:" encoded822addr
  <DD>
  <DT>encoded822addr = 1*xchar ; further defined in RFC822
  <DD>
  <P><PRE>; NEWS (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.html">RFC1036</A>)
</PRE>
  <P></P>
  <DT>newsurl = "news:" grouppart
  <DD>
  <DT>grouppart = "*" | group | article
  <DD>
  <DT>group = alpha *[ alpha | digit | "-" | "." | "+" | "_" ]
  <DD>
  <DT>article = 1*[ uchar | ";" | "/" | "?" | ":" | "&amp;" | "=" ] "@" host
  <DD>
  <P><PRE>; NNTP (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0977.html">RFC977</A>)
</PRE>
  <P></P>
  <DT>nntpurl = "nntp://" hostport "/" group [ "/" digits ]
  <DD>
  <P><PRE>; TELNET
</PRE>
  <P></P>
  <DT>telneturl = "telnet://" login [ "/" ]
  <DD>
  <P><PRE>; WAIS (see also <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1625.html">RFC1625</A>)
</PRE>
  <P></P>
  <DT>waisurl = waisdatabase | waisindex | waisdoc
  <DD>
  <DT>waisdatabase = "wais://" hostport "/" database
  <DD>
  <DT>waisindex = "wais://" hostport "/" database "?" search
  <DD>
  <DT>waisdoc = "wais://" hostport "/" database "/" wtype "/" wpath
  <DD>
  <DT>database = *uchar
  <DD>
  <DT>wtype = *uchar
  <DD>
  <DT>wpath = *uchar
  <DD>
  <P><PRE>; PROSPERO
</PRE>
  <P></P>
  <DT>prosperourl = "prospero://" hostport "/" ppath *[ fieldspec ]
  <DD>
  <DT>ppath = psegment *[ "/" psegment ]
  <DD>
  <DT>psegment = *[ uchar | "?" | ":" | "@" | "&amp;" | "=" ]
  <DD>
  <DT>fieldspec = ";" fieldname "=" fieldvalue
  <DD>
  <DT>fieldname = *[ uchar | "?" | ":" | "@" | "&amp;" ]
  <DD>
  <DT>fieldvalue = *[ uchar | "?" | ":" | "@" | "&amp;" ]
  <DD>
  <P><PRE>; Miscellaneous definitions
</PRE>
  <P></P>
  <DT>lowalpha = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" |
  <DD>"i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | 
  "u" | "v" | "w" | "x" | "y" | "z" <BR>
  <DT>hialpha = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" |
  <DD>"J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | 
  "V" | "W" | "X" | "Y" | "Z" 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-20>Page 20</A></EM>
  <DD>
  <P></P>
  <DT>alpha = lowalpha | hialpha
  <DD>
  <DT>digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" |
  <DD>"8" | "9" <BR>
  <DT>safe = "$" | "-" | "_" | "." | "+"
  <DD>
  <DT>extra = "!" | "*" | "'" | "(" | ")" | ","
  <DD>
  <DT>national = "{" | "}" | "|" | "\" | "^" | "~" | "[" | "]" | "`"
  <DD>
  <DT>punctuation = "&lt;" | "&gt;" | "#" | "%" | &lt;"&gt;
  <DD>
  <P></P>
  <DT>reserved = ";" | "/" | "?" | ":" | "@" | "&amp;" | "="
  <DD>
  <DT>hex = digit | "A" | "B" | "C" | "D" | "E" | "F" |
  <DD>"a" | "b" | "c" | "d" | "e" | "f" <BR>
  <DT>escape = "%" hex hex
  <DD>
  <P></P>
  <DT>unreserved = alpha | digit | safe | extra
  <DD>
  <DT>uchar = unreserved | escape
  <DD>
  <DT>xchar = unreserved | reserved | escape
  <DD>
  <DT>digits = 1*digit
  <DD>
  <P></P>
  <DT><STRONG><A name=sec-6>6</A> Security Considerations</STRONG>
  <DD>
  <P>The URL scheme does not in itself pose a security threat. Users should 
  beware that there is no general guarantee that a URL which at one time points 
  to a given object continues to do so, and does not even at some later time 
  point to a different object due to the movement of objects on servers. 
  <P>A URL-related security threat is that it is sometimes possible to construct 
  a URL such that an attempt to perform a harmless idempotent operation such as 
  the retrieval of the object will in fact cause a possibly damaging remote 
  operation to occur. The unsafe URL is typically constructed by specifying a 
  port number other than that reserved for the network protocol in question. The 
  client unwittingly contacts a server which is in fact running a different 
  protocol. The content of the URL contains instructions which when interpreted 
  according to this other protocol cause an unexpected operation. An example has 
  been the use of gopher URLs to cause a rude message to be sent via a SMTP 
  server. Caution should be used when using any URL which specifies a port 
  number other than the default for the protocol, especially when it is a number 
  within the reserved space. 
  <P>Care should be taken when URLs contain embedded encoded delimiters for a 
  given protocol (for example, CR and LF characters for telnet protocols) that 
  these are not unencoded before transmission. This would violate the protocol 
  but could be used to simulate an extra operation or parameter, again causing 
  an unexpected and possible harmful remote operation to be performed. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-21>Page 21</A></EM>
  <DD>
  <P>The use of URLs containing passwords that should be secret is clearly 
  unwise. 
  <P></P>
  <DT><STRONG><A name=sec-7>7</A> Acknowledgements</STRONG>
  <DD>
  <P>This paper builds on the basic WWW design (<A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1630.html">RFC 1630</A>) 
  and much discussion of these issues by many people on the network. The 
  discussion was particularly stimulated by articles by Clifford Lynch, Brewster 
  Kahle [10] and Wengyik Yeong [18]. Contributions from John Curran, Clifford 
  Neuman, Ed Vielmetti and later the IETF URL BOF and URI working group were 
  incorporated. 
  <P>Most recently, careful readings and comments by Dan Connolly, Ned Freed, 
  Roy Fielding, Guido van Rossum, Michael Dolan, Bert Bos, John Kunze, Olle 
  Jarnefors, Peter Svanberg and many others have helped refine this RFC. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-22>Page 22</A></EM>
  <DD>
  <P></P>
  <DT>APPENDIX: Recommendations for URLs in Context
  <DD>
  <P>URIs, including URLs, are intended to be transmitted through protocols 
  which provide a context for their interpretation. 
  <P>In some cases, it will be necessary to distinguish URLs from other possible 
  data structures in a syntactic structure. In this case, is recommended that 
  URLs be preceeded with a prefix consisting of the characters "URL:". For 
  example, this prefix may be used to distinguish URLs from other kinds of URIs. 

  <P>In addition, there are many occasions when URLs are included in other kinds 
  of text; examples include electronic mail, USENET news messages, or printed on 
  paper. In such cases, it is convenient to have a separate syntactic wrapper 
  that delimits the URL and separates it from the rest of the text, and in 
  particular from punctuation marks that might be mistaken for part of the URL. 
  For this purpose, is recommended that angle brackets ("&lt;" and "&gt;"), 
  along with the prefix "URL:", be used to delimit the boundaries of the URL. 
  This wrapper does not form part of the URL and should not be used in contexts 
  in which delimiters are already specified. 
  <P>In the case where a fragment/anchor identifier is associated with a URL 
  (following a "#"), the identifier would be placed within the brackets as well. 

  <P>In some cases, extra whitespace (spaces, linebreaks, tabs, etc.) may need 
  to be added to break long URLs across lines. The whitespace should be ignored 
  when extracting the URL. 
  <P>No whitespace should be introduced after a hyphen ("-") character. Because 
  some typesetters and printers may (erroneously) introduce a hyphen at the end 
  of line when breaking a line, the interpreter of a URL containing a line break 
  immediately after a hyphen should ignore all unencoded whitespace around the 
  line break, and should be aware that the hyphen may or may not actually be 
  part of the URL. 
  <P>Examples: 
  <P>Yes, Jim, I found it under &lt;URL:<A 
  href="ftp://info.cern.ch/pub/www/doc;">ftp://info.cern.ch/pub/www/doc;</A> 
  type=d&gt; but you can probably pick it up from &lt;URL:<A 
  href="ftp://ds.in/">ftp://ds.in/</A> ternic.net/rfc&gt;. Note the warning in 
  &lt;URL:<A href="http://ds.internic/">http://ds.internic/</A>. 
  net/instructions/overview.html#WARNING&gt;. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-23>Page 23</A></EM>
  <DD>
  <P></P>
  <DT>References
  <DD>
  <P>[1] Anklesaria, F., McCahill, M., Lindner, P., Johnson, D., Torrey, D., and 
  B. Alberti, "The Internet Gopher Protocol (a distributed document search and 
  retrieval protocol)", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1436.html">RFC 1436</A>, 
  University of Minnesota, March 1993. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1436.txt;type=a">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1436.txt;type=a</A>&gt;
</PRE>
  <P>[2] Anklesaria, F., Lindner, P., McCahill, M., Torrey, D., Johnson, D., and 
  B. Alberti, "Gopher+: Upward compatible enhancements to the Internet Gopher 
  protocol", <BR>University of Minnesota, July 1993. <PRE>       &lt;URL:<A href="ftp://boombox.micro.umn.edu/pub/gopher/gopher_protocol">ftp://boombox.micro.umn.edu/pub/gopher/gopher_protocol</A>
       /Gopher+/Gopher+.txt&gt;
</PRE>
  <P>[3] Berners-Lee, T., "Universal Resource Identifiers in WWW: A Unifying 
  Syntax for the Expression of Names and Addresses of Objects on the Network as 
  used in the World-Wide Web", RFC 1630, CERN, June 1994. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1630.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1630.txt</A>&gt;
</PRE>
  <P>[4] Berners-Lee, T., "Hypertext Transfer Protocol (HTTP)", CERN, November 
  1993. <PRE>       &lt;URL:<A href="ftp://info.cern.ch/pub/www/doc/http-spec.txt.Z">ftp://info.cern.ch/pub/www/doc/http-spec.txt.Z</A>&gt;
</PRE>
  <P>[5] Braden, R., Editor, "Requirements for Internet Hosts -- Application and 
  Support", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/stdlist.html#s3">STD 3</A>, <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1123.html">RFC 1123</A>, 
  IETF, October 1989. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1123.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1123.txt</A>&gt;
</PRE>
  <P>[6] Crocker, D. "Standard for the Format of ARPA Internet Text Messages", 
  <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/stdlist.html#s11">STD 
  11</A>, <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0822.html">RFC 
  822</A>, UDEL, April 1982. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc822.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc822.txt</A>&gt;
</PRE>
  <P>[7] Davis, F., Kahle, B., Morris, H., Salem, J., Shen, T., Wang, R., Sui, 
  J., and M. Grinbaum, "WAIS Interface Protocol Prototype Functional 
  Specification", (v1.5), Thinking Machines <BR>Corporation, April 1990. <PRE>       &lt;URL:<A href="ftp://quake.think.com/pub/wais/doc/protspec.txt">ftp://quake.think.com/pub/wais/doc/protspec.txt</A>&gt;
</PRE>
  <P>[8] Horton, M. and R. Adams, "Standard For Interchange of USENET Messages", 
  <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.html">RFC 1036</A>, 
  AT&amp;T Bell Laboratories, Center for Seismic Studies, December 1987. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1036.txt</A>&gt;
</PRE>
  <P>[9] Huitema, C., "Naming: Strategies and Techniques", Computer Networks and 
  ISDN Systems 23 (1991) 107-110. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-24>Page 24</A></EM>
  <DD>
  <P>[10] Kahle, B., "Document Identifiers, or International Standard Book 
  Numbers for the Electronic Age", 1991. <PRE>       &lt;URL:<A href="ftp://quake.think.com/pub/wais/doc/doc-ids.txt">ftp://quake.think.com/pub/wais/doc/doc-ids.txt</A>&gt;
</PRE>
  <P>[11] Kantor, B. and P. Lapsley, "Network News Transfer Protocol: A Proposed 
  Standard for the Stream-Based Transmission of News", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0977.html">RFC 977</A>, UC 
  San Diego &amp; UC Berkeley, February 1986. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc977.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc977.txt</A>&gt;
</PRE>
  <P>[12] Kunze, J., "Functional Requirements for Internet Resource Locators", 
  Work in Progress, December 1994. <PRE>       &lt;URL:<A href="ftp://ds.internic.net/internet-drafts">ftp://ds.internic.net/internet-drafts</A>
       /draft-ietf-uri-irl-fun-req-02.txt&gt;
</PRE>
  <P>[13] Mockapetris, P., "Domain Names - Concepts and Facilities", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/stdlist.html#s13">STD 13</A>, 
  <A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1034.html">RFC 1034</A>, 
  USC/Information Sciences Institute, November 1987. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1034.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1034.txt</A>&gt;
</PRE>
  <P>[14] Neuman, B., and S. Augart, "The Prospero Protocol", 
  <BR>USC/Information Sciences Institute, June 1993. <PRE>       &lt;URL:<A href="ftp://prospero.isi.edu/pub/prospero/doc">ftp://prospero.isi.edu/pub/prospero/doc</A>
       /prospero-protocol.PS.Z&gt;
</PRE>
  <P>[15] Postel, J. and J. Reynolds, "File Transfer Protocol (FTP)", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/stdlist.html#s9">STD 9</A>, <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc0959.html">RFC 959</A>, 
  USC/Information Sciences Institute, <BR>October 1985. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc959.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc959.txt</A>&gt;
</PRE>
  <P>[16] Sollins, K. and L. Masinter, "Functional Requirements for Uniform 
  Resource Names", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1737.html">RFC 1737</A>, 
  MIT/LCS, Xerox Corporation, December 1994. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1737.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1737.txt</A>&gt;
</PRE>
  <P>[17] St. Pierre, M, Fullton, J., Gamiel, K., Goldman, J., Kahle, B., Kunze, 
  J., Morris, H., and F. Schiettecatte, "WAIS over Z39.50-1988", <A 
  href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1625.html">RFC 1625</A>, 
  WAIS, Inc., CNIDR, Thinking Machines Corp., UC Berkeley, FS Consulting, June 
  1994. <PRE>       &lt;URL:<A href="http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1625.txt">http://www.cis.ohio-state.edu/cgi-bin/rfc/rfc1625.txt</A>&gt;
</PRE>
  <P>[18] Yeong, W. "Towards Networked Information Retrieval", Technical report 
  91-06-25-01, Performance Systems International, Inc. <PRE>       &lt;URL:<A href="ftp://uu.psi.com/wp/nir.txt">ftp://uu.psi.com/wp/nir.txt</A>&gt;, June 1991.
</PRE>
  <P>[19] Yeong, W., "Representing Public Archives in the Directory", Work in 
  Progress, November 1991. 
  <P></P>
  <DT>
  <HR>
  <EM><A name=page-25>Page 25</A></EM>
  <DD>
  <P>[20] "Coded Character Set -- 7-bit American Standard Code for Information 
  Interchange", ANSI X3.4-1986. 
  <P></P>
  <DT>Editors' Addresses
  <DD>
  <P></P>
  <DT>Tim Berners-Lee
  <DD>
  <DT>World-Wide Web project
  <DD>
  <DT>CERN,
  <DD>
  <DT><STRONG><A name=sec-1211>1211</A> Geneva 23,</STRONG>
  <DD>
  <DT>Switzerland
  <DD>
  <P></P>
  <DT>Phone: +41 (22)767 3755
  <DD>
  <DT>Fax: +41 (22)767 7155
  <DD>
  <DT>EMail: <A href="mailto:timbl@info.cern.ch">timbl@info.cern.ch</A>
  <DD>
  <P></P>
  <DT>Larry Masinter
  <DD>
  <DT>Xerox PARC
  <DD>
  <DT><STRONG><A name=sec-3333>3333</A> Coyote Hill Road</STRONG>
  <DD>
  <DT>Palo Alto, CA 94034
  <DD>
  <P></P>
  <DT>Phone: (415) 812-4365
  <DD>
  <DT>Fax: (415) 812-4333
  <DD>
  <DT>EMail: <A 
href="mailto:masinter@parc.xerox.com">masinter@parc.xerox.com</A>
  <DD>
  <P></P>
  <DT>Mark McCahill
  <DD>
  <DT>Computer and Information Services,
  <DD>
  <DT>University of Minnesota
  <DD>
  <DT>Room 152 Shepherd Labs
  <DD>
  <DT><STRONG><A name=sec-100>100</A> Union Street SE</STRONG>
  <DD>
  <DT>Minneapolis, MN 55455
  <DD>
  <P></P>
  <DT>Phone: (612) 625 1300
  <DD>
  <DT>EMail: <A 
  href="mailto:mpm@boombox.micro.umn.edu">mpm@boombox.micro.umn.edu</A>
  <DD>
  <P></P>
  <DT>
  <HR>

  <DD></DD></DL></BODY></HTML>
